set number
syntax enable
set background=light
"set background=light
" if you want light 
"colorscheme solarized
set ts=4
set sw=4
set sts=4
set expandtab
set cindent
set smartindent
set autoindent

set laststatus=4
set t_Co=256

set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Vundle
Plugin 'gmarik/Vundle.vim'

" Interfaces
Plugin 'bling/vim-airline'
Plugin 'kien/ctrlp.vim'
Plugin 'Shougo/unite.vim'
Plugin 'Shougo/vimshell.vim'
Plugin 'sudo.vim'
Plugin 'Lokaltog/vim-powerline'

" Language Support
"Plugin 'Valloric/YouCompleteMe'
Plugin 'OmniCppComplete'
Plugin 'derekwyatt/vim-scala'
"Plugin 'gabrielelana/vim-markdown'
Plugin 'hail2u/vim-css3-syntax'
Plugin 'jnwhiteh/vim-golang'
Plugin 'kchmck/vim-coffee-script'
"Plugin 'klen/python-mode'
Plugin 'leshill/vim-json'
Plugin 'vim-javascript'
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-markdown'
Plugin 'altercation/vim-colors-solarized'
Plugin 'Mizuchi/STL-Syntax'
"Plugin 'Valloric/YouCompleteMe'
" Git
Plugin 'gregsexton/gitv'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" Programming
Plugin 'davidhalter/jedi-vim'
Plugin 'ervandew/supertab'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/emmet-vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-dispatch'

" Ruby Utilities
"Plugin 'tpope/vim-bundler'
"Plugin 'tpope/vim-cucumber'
"Plugin 'tpope/vim-rake'
"Plugin 'tpope/vim-rails'

" Misc

call vundle#end()

filetype plugin indent on
"configure tags - add additional tags here or comment out not-used ones
set tags+=~/.vim/tags/cpp
set tags+=~/.vim/tags/gl
set tags+=~/.vim/tags/sdl
set tags+=~/.vim/tags/qt4
" build tags of your own project with Ctrl-F12
map <C-F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q.<CR>

" OmniCppComplete
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_MayCompleteDot = 1 " autocomplete after .
let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview

let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
"let g:ycm_global_ycm_extra_conf = ''
set omnifunc=syntaxcomplete#Complete
set backspace=indent,eol,start
set guifont=Inconsolata\ for\ Powerline:h15
let g:Powerline_symbols = 'fancy'
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8
autocmd StdinReadPre * let s:std_in=1
autocmd BufNewFile,BufReadPost *.md set filetype=markdown

nmap <F8> :TagbarToggle<CR>
nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>

